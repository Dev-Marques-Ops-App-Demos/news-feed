name: Build and push base image
on:
  push:
    branches:
      - master
  repository_dispatch:

env:
  ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT }}
  AWS_REGION:     ${{ vars.AWS_DEFAULT_REGION }}
  REGISTRY:       ${{ vars.REGISTRY_NEWS_FEED }}
  REPOSITORY:     ${{ vars.REPOSITORY_NEWS_FEED }}

jobs:
  BuildPushBaseImage:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/ECRPushImage
          aws-region: ${{ env.AWS_REGION }}

      - name: ECR Credentials
        id: ecr-credentials
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag Release
        id: tag-release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: feature
          tag_prefix: v

      - name: Tags Outputs
        run: |
          echo "Got tag name ${{ steps.tag-release.outputs.tag_name }}"
          echo "Got release version ${{ steps.tag-release.outputs.version }}"
          echo "Upload release artifacts to ${{ steps.tag-release.outputs.upload_url }}"
        shell: bash

#      - name: Build, Tag and Push
#        run: |
#          docker build -f base/Dockerfile base -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
#          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
#          echo "image=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest" >> $GITHUB_OUTPUT